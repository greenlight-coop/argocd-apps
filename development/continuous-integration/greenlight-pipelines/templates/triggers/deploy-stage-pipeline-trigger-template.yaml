apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: deploy-stage-pipeline-trigger-template
spec:
  params:
    - name: project-name
      description: The repo name in GitHub
    - name: repository-full-name
      description: The repo name in GitHub qualified by the user/organization (e.g. greenlight-coop/helloworld)
    - name: git-revision
      description: The revision to clone and build
  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        generateName: $(tt.params.project-name)-deploy-pipeline-run-
        namespace: greenlight-pipelines
      spec:
        pipelineRef:
          name: deploy-stage-pipeline
        podTemplate:
          securityContext:
            runAsUser: 0
        serviceAccountName: pipeline-sa
        params:
          - name: project-name
            value: $(tt.params.project-name)
          - name: repository-full-name
            value: $(tt.params.repository-full-name)
          - name: git-revision
            value: $(tt.params.git-revision)
        workspaces:
          - name: git-source
            volumeClaimTemplate:
              spec:
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 1Gi
                storageClassName: rook-nfs-share1
          - name: status-workspace
            volumeClaimTemplate:
              spec:
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 1Ki
                storageClassName: rook-nfs-share1
          - name: node-modules
            configMap:
              name: node-modules
          - name: kubeconfig-dir
            emptyDir: {}
          - name: manifest-dir
            emptyDir: {}