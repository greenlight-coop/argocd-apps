apiVersion: triggers.tekton.dev/v1beta1
kind: EventListener
metadata:
  name: service-pipeline-event-listener
  namespace: greenlight-pipelines
spec:
  serviceAccountName: tekton-triggers-admin
  triggers:
    - name: pr-pipeline-trigger
      template:
        ref: pr-pipeline-trigger-template
      bindings:
        - kind: TriggerBinding
          ref: pull-request-trigger-binding
      interceptors:
        - name: GitHub pull request
          ref:
            name: github
          params:
            - name: secretRef
              value:
                secretName: webhook-secret
                secretKey: webhookSecretValue
            - name: eventTypes
              value: ["pull_request"]
        - name: "CEL filter: PR opened, reopened or synchronized"
          ref:
            name: cel
          params:
            - name: filter
              value: "body.action in ['opened', 'reopened', 'synchronize']"
            - name: overlays
              value:
                - key: build_type
                  expression: "'service'"
                - key: hub_organization
                  expression: "body.organization.login.replace('-', '')"
                - key: short_repository_identifier
                  expression: "body.repository.name.replace('-service', '')"
    - name: close-pr-pipeline-trigger
      template:
        ref: close-pr-pipeline-trigger-template
      bindings:
        - kind: TriggerBinding
          ref: pull-request-trigger-binding
      # interceptors:
      #   - name: GitHub pull request
      #     ref:
      #       name: github
      #     params:
      #       - name: secretRef
      #         value:
      #           secretName: webhook-secret
      #           secretKey: webhookSecretValue
      #       - name: eventTypes
      #         value: ["pull_request"]
      #   - name: "CEL filter: PR closed"
      #     ref:
      #       name: cel
      #     params:
      #       - name: filter
      #         value: "body.action in ['closed']"
      #       - name: overlays
      #         value:
      #           - key: build_type
      #             expression: "'service'"
      #           - key: hub_organization
      #             expression: "body.organization.login.replace('-', '')"
      #           - key: short_repository_identifier
      #             expression: "body.repository.name.replace('-service', '')"
    - name: main-pipeline-trigger
      template:
        ref: main-pipeline-trigger-template
      bindings:
        - kind: TriggerBinding
          ref: push-trigger-binding
      interceptors:
        - name: GitHub push
          ref:
            name: github
          params:
            - name: secretRef
              value:
                secretName: webhook-secret
                secretKey: webhookSecretValue
            - name: eventTypes
              value: ["push"]
        - name: "CEL filter: main branch pushed"
          ref:
            name: cel
          params:
            - name: filter
              value: "(body.ref == 'refs/heads/main' || body.ref == 'refs/heads/master') && body.head_commit.committer.name != '{{ .Values.bot.username }}'"
            - name: overlays
              value:
                - key: build_type
                  expression: "'service'"
                - key: branch_name
                  expression: "body.ref.split('/')[2]"
                - key: hub_organization
                  expression: "body.organization.login.replace('-', '')"
