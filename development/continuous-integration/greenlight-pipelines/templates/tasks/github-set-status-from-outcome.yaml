---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: github-set-status-from-outcome
  labels:
    app.kubernetes.io/version: "0.2"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: github
    tekton.dev/displayName: "set github status"
spec:
  description: >-
    This task will set the status of the CI job to the specified value along
    witha link to the specified target URL where developers can follow the
    progress of the CI job.

    The `github-set-status` task allows external services to mark GitHub commits
    with an `error`, `failure`, `pending`, or `success` state, which is then
    reflected in pull requests involving those commits. Statuses include as well a
    `description` and a `target_url`, to give the user informations about the CI
    statuses or a direct link to the full log.

    Note: copied from github-set-status task version 0.2 and modified to use workspace
    status value in place of parameter.

  params:
  - name: GITHUB_HOST_URL
    description: |
      The GitHub host, adjust this if you run a GitHub enteprise.
    default: "api.github.com"
    type: string

  - name: API_PATH_PREFIX
    description: |
      The API path prefix, GitHub Enterprise has a prefix e.g. /api/v3
    default: ""
    type: string

  - name: REPO_FULL_NAME
    description: |
      The GitHub repository full name, e.g.: tektoncd/catalog
    type: string

  - name: GITHUB_TOKEN_SECRET_NAME
    description: |
      The name of the kubernetes secret that contains the GitHub token, default: github
    type: string
    default: github

  - name: GITHUB_TOKEN_SECRET_KEY
    description: |
      The key within the kubernetes secret that contains the GitHub token, default: token
    type: string
    default: token

  - name: SHA
    description: |
      Commit SHA to set the status for.
    type: string

  - name: TARGET_URL
    description: |
      The target URL to associate with this status. This URL will be linked
      from the GitHub UI to allow users to easily see the source of the
      status.
    type: string

  - name: DESCRIPTION
    description: |
      A short description of the status.
    type: string

  - name: CONTEXT
    description: |
      The GitHub context, A string label to differentiate this status from
      the status of other systems. ie: "continuous-integration/tekton"
    default: "continuous-integration/tekton"
    type: string

  workspaces:
    - name: status-workspace
      description: status is saved into this workspace

  steps:
    - name: set-status
      env:
        - name: GITHUBTOKEN
          valueFrom:
            secretKeyRef:
              name: $(params.GITHUB_TOKEN_SECRET_NAME)
              key: $(params.GITHUB_TOKEN_SECRET_KEY)

      image: registry.access.redhat.com/ubi8/python-38:1-34.1599745032
      script: |
        #!/usr/libexec/platform-python
        import json
        import os
        import http.client
        import time #DELETE

        time.sleep(600)

        with open('$(workspaces.status-workspace.path)/status', 'r') as file:
            status = file.read().replace('\n', '')

        status_url = "$(params.API_PATH_PREFIX)" + "/repos/$(params.REPO_FULL_NAME)/" + \
            "statuses/$(params.SHA)"

        data = {
            "state": status,
            "target_url": "$(params.TARGET_URL)",
            "description": "$(params.DESCRIPTION) - " + status,
            "context": "$(params.CONTEXT)"
        }
        print("Sending this data to GitHub: ")
        print(data)

        conn = http.client.HTTPSConnection("$(params.GITHUB_HOST_URL)")
        r = conn.request(
            "POST",
            status_url,
            body=json.dumps(data),
            headers={
                "User-Agent": "TektonCD, the peaceful cat",
                "Authorization": "Bearer " + os.environ["GITHUBTOKEN"],
                "Accept": "application/vnd.github.v3+json ",
            })
        resp = conn.getresponse()
        if not str(resp.status).startswith("2"):
            print("Error: %d" % (resp.status))
            print(resp.read())
        else:
          print("GitHub status '" + status + "' has been set on "
                "$(params.REPO_FULL_NAME)#$(params.SHA) ")
