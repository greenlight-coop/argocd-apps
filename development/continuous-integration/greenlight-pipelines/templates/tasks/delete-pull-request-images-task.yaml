apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: delete-pull-request-images
  namespace: greenlight-pipelines
spec:
  description: >-
    Removes preview application image tags generated from pull request builds.
  params:
    - name: node-image
      description: Base Node.js image to use for the build
      default: greenlightcoop/node-utils:0.1.27@sha256:3fa9d0a4862816e9e820060396899a6de1142a6a90450c3c88b0e81af0890ad4
    - name: docker-hub-domain
      description: Docker Hub API
      default: hub.docker.com
    - name: organization
      description: the Docker Hub organization name
    - name: repository
      description: the repository name, also used as the Docker image name
    - name: pull-request-number
      description: GitHub pull request number
      default: n/a
  steps:
    - name: delete-pull-request-images
      image: $(params.node-image)
      script: |
        #!/usr/bin/env node
        
        const { DockerHubApi, getDockerCredentials } = require('@greenlight-coop/greenlight-build-utils')

        const domain = '$(params.docker-hub-domain)'
        const dockerHubUrl = `https://${domain}/v2/`

        const organization = '$(params.organization)'
        const repository = '$(params.repository)'
        const pullRequestNumber = '$(params.pull-request-number)'

        async function deletePullRequestImages () {
          try {
            const auth = await getDockerCredentials(dockerHubUrl)
            const properties = {
              domain,
              organization,
              repository,
              username: auth.username,
              password: auth.password
            }
            const api = new DockerHubApi(properties)

            const tags = await api.getPullRequestTags(pullRequestNumber)
            for (const tag of tags) {
              await api.deleteTag(tag)
            }
          } catch (err) {
            console.log(err)
            throw err
          }
        }
        
        deletePullRequestImages()
