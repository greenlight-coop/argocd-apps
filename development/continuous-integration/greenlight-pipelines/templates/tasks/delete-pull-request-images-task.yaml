apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: delete-pull-request-images
  namespace: greenlight-pipelines
spec:
  description: >-
    Removes preview application image tags generated from pull request builds.
  workspaces:
    - name: node-modules
      description: modules with useful shared behavior
  params:
    - name: node-image
      description: Base Node.js image to use for the build
      default: greenlightcoop/node-utils:0.1.14@sha256:01be5eba933dd05d0164c5b0a5b28f62e3dbfba6725585a57e3953acc7386000
    - name: docker-hub-domain
      description: Docker Hub API
      default: hub.docker.com
    - name: organization
      description: the Docker Hub organization name
    - name: repository
      description: the repository name, also used as the Docker image name
    - name: pull-request-number
      description: GitHub pull request number
      default: n/a
  steps:
    - name: delete-pull-request-images
      image: $(params.node-image)
      script: |
        #!/usr/bin/env node
        const fs = require('fs')
        const _ = require('lodash')
        const docker = require('$(workspaces.node-modules.path)/docker-functions')

        const dockerHubDomain = '$(params.docker-hub-domain)'
        const dockerHubUrl = `https://${dockerHubDomain}/v2/`

        const organization = '$(params.organization)'
        const repository = '$(params.repository)'
        const pullRequestNumber = '$(params.pull-request-number)'

        deletePullRequestImages()

        async function deletePullRequestImages () {
          try {
            const auth = await getAuth(dockerHubUrl)
            const config = {
              dockerHubDomain, 
              organization, 
              repository, 
              username: auth.username, 
              password: auth.password
            }
            const api = docker.getHubAPI(config)

            const tags = await api.getPullRequestTags(pullRequestNumber)
            for (const tag of tags) {
              await api.deleteTag(tag)
            }
          } catch (err) {
            console.log(err)
            throw err
          }
        }
        
        async function getAuth (apiUrl) {
          const config = JSON.parse(fs.readFileSync('/tekton/creds-secrets/docker-registry-credentials/.dockerconfigjson', 'utf8'))
          return config.auths[apiUrl]
        } 