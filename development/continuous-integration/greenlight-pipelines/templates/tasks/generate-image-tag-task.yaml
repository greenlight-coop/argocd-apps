apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: generate-image-tag
  namespace: greenlight-pipelines
spec:
  description: >-
    Provides the Docker image tag to use for the generated image for both main branch builds (e.g. v0.1.0) and
    pull request branch builds (e.g. v0.1.0-feature-5-pr-1-commit-2). Version information is pulled from Docker 
    Hub if available and defaults to be v0.1.0 for new artifaacts.
  workspaces:
    - name: node-modules
      description: modules with useful shared behavior
  params:
    - name: node-image
      description: Base Node.js image to use for the build
      default: greenlightcoop/node-utils:0.1.9
    - name: docker-hub-domain
      description: Docker Hub API
      default: hub.docker.com
    - name: organization
      description: the Docker Hub organization name
    - name: repository
      description: the repository name, also used as the Docker image name
    - name: branch-name
      description: the branch being built, either main|master or a feature branch (e.g. feature/5)
    - name: pull-request-number
      description: GitHub pull request number
      default: n/a
    - name: pull-request-commit-number
      description: ascending count of commit in a pull request
      default: n/a
  results:
    - name: image-tag
      description: the tag to use for the generated image in Docker hub
  steps:
    - name: generate-image-tag
      image: $(params.node-image)
      script: |
        #!/usr/bin/env node
        const fs = require('fs')
        const _ = require('lodash')
        const docker = require('$(workspaces.node-modules.path)/docker-functions')

        const dockerHubDomain = '$(params.docker-hub-domain)'
        const dockerHubUrl = `https://${dockerHubDomain}/v2/`

        const organization = '$(params.organization)'
        const repository = '$(params.repository)'
        const branchName = '$(params.branch-name)'
        const pullRequestNumber = '$(params.pull-request-number)'
        const commitNumber = '$(params.pull-request-commit-number)'

        generateImageTag()

        async function generateImageTag () {
          try {
            const auth = await getAuth(dockerHubUrl)
            const config = {
              dockerHubDomain, 
              organization, 
              repository, 
              username: auth.username, 
              password: auth.password
            }
            const api = docker.getHubAPI(config)

            let imageTag = '0.1.0'
            const releaseTags = await api.getReleaseTags()
            if (releaseTags.length > 0) {
              const mostRecentTag = _.last(releaseTags)
              const semanticVersion = docker.getSemanticVersion(mostRecentTag)

              semanticVersion.patch = semanticVersion.patch + 1
              imageTag = semanticVersion.toString()
            }

            if (branchName !== 'main' && branchName !== 'master') {
              imageTag = imageTag + '-' + branchName.replace('/', '-') + '-pr-' + pullRequestNumber + '-commit-' + commitNumber
            }

            console.log('Generated image tag version: %s', imageTag)
            fs.writeFileSync('$(results.image-tag.path)', imageTag)
          } catch (err) {
            console.log(err)
            throw err
          }
        }
        
        async function getAuth (apiUrl) {
          const config = JSON.parse(fs.readFileSync('/tekton/creds-secrets/docker-registry-credentials/.dockerconfigjson', 'utf8'))
          return config.auths[apiUrl]
        } 