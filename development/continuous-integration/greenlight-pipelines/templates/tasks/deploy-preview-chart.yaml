apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: deploy-preview-chart
spec:
  description: >-
    Deploys a preview Helm chart for a service for isolated integration testing.
  params:
    - name: project-name
      description: The project name for the application to install (should match GitHub repo and Docker image name)
      type: string
    - name: namespace
      description: The namespace to install the preview into
      type: string
    - name: image-tag
      description: The version of the image to deploy and test
      type: string
    - name: image-digest
      description: The digest of the image to deploy and test
      type: string
    - name: helm-image
      default: greenlightcoop/node-utils:0.1.21@sha256:f5b7763500c7eddb28de1b82af072c97699604f9bf46e7b4604953e1f0bb6164
      description: Helm image
    - name: kubectl-image
      default: gcr.io/cloud-builders/kubectl@sha256:253bbf752b78f904c1c9e9faed77526532f9d177ba9e50ca7d03cd1cfba6996f #image is huge
      description: Kubectl wrapper image
  workspaces:
    - name: source
  steps:
    - name: deploy-preview-chart
      workingDir: $(workspaces.source.path)
      image: $(params.helm-image)
      script: |
        #!/usr/bin/env bash
        set -xe

        export CHART_NAME=$(yq '.name' $(workspaces.source.path)/packages/service/charts/preview/Chart.yaml)

        mkdir -p $(workspaces.source.path)/charts/preview/charts
        cp -r $(workspaces.source.path)/packages/service/charts/main $(workspaces.source.path)/packages/service/charts/preview/charts
        helm dependency update ./packages/service/charts/preview
        helm upgrade --debug --install \
          --namespace $(params.namespace) \
          --set global.cassandra.replicationFactor={{- if eq .Values.cassandra.datacenterSize 1.0 -}} 1 {{- else -}} 3 {{- end }} \
          --set global.debug=true \
          --set global.domain={{ .Values.domainName }} \
          --set global.subdomain=$(params.namespace) \
          --set $(params.project-name).image.tag=$(params.image-tag) \
          --set $(params.project-name).image.digest=$(params.image-digest) \
          $CHART_NAME ./packages/service/charts/preview
    - name: wait-until-ready
      workingDir: $(workspaces.source.path)
      image: $(params.kubectl-image)
      script: |
        #!/usr/bin/env bash
        set -xe

        kubectl wait -n $(params.namespace) --for=condition=Ready --timeout=240s ksvc/preview-$(params.project-name)
