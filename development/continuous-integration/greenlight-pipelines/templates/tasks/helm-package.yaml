apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: helm-package
  namespace: greenlight-pipelines
spec:
  description: >-
    Generates a versioned Helm package in a checked out copy of the Green Light Helm chart repository,
    updates the Helm index and pushes the updated Helm repository upstream to GitHub.
  params:
    - name: version
      description: The version tag for the Helm package to create. If building a service package, the image version must be this version.
    - name: digest
      description: The digest of the image included in the package, if applicable
      default: ""
    - name: node-image
      description: Base Node.js image to use for the build
      default: greenlightcoop/node-utils:0.1.21@sha256:f5b7763500c7eddb28de1b82af072c97699604f9bf46e7b4604953e1f0bb6164
  workspaces:
    - name: source
    - name: helm
  steps:
    - name: helm-package
      workingDir: $(workspaces.helm.path)
      image: $(params.node-image)
      script: |
        #!/usr/bin/env bash
        set -ex
 
        if [ -f "$(workspaces.source.path)/Chart.yaml" ] 
        then
          export HELM_PACKAGE_PATH=$(workspaces.source.path)
        elif [ -f "$(workspaces.source.path)/charts/main/Chart.yaml" ]
        then
          export HELM_PACKAGE_PATH=$(workspaces.source.path)/charts/main
        else
          echo 'No Helm chart found'
          exit 1
        fi

        export CHART_NAME=$(yq '.name' $HELM_PACKAGE_PATH/Chart.yaml)
        yq -i '.version = "$(params.version)"' $HELM_PACKAGE_PATH/Chart.yaml
        yq -i '.appVersion = "$(params.version)"' $HELM_PACKAGE_PATH/Chart.yaml

        if [ ! -z "$(params.digest)" ]
        then
          yq -i '.image.tag = "$(params.version)"' $HELM_PACKAGE_PATH/values.yaml
          yq -i '.image.digest = "$(params.digest)"' $HELM_PACKAGE_PATH/values.yaml
        fi

        helm dependency update $HELM_PACKAGE_PATH --debug
        helm lint $HELM_PACKAGE_PATH --debug
        helm package $HELM_PACKAGE_PATH --debug --version "$(params.version)"
        helm repo index .

        git config user.email "{{ .Values.bot.email }}"
        git config user.name "{{ .Values.bot.username }}"
        git add .
        git commit -m"Updated chart index; added version $(params.version) of chart $CHART_NAME"
        git push origin HEAD:main

        cd $(workspaces.source.path)
        git add $HELM_PACKAGE_PATH/Chart.yaml
        git commit -m"Updated chart versions to $(params.version)"
        git push origin HEAD:main
