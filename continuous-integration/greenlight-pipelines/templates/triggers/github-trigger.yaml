---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: node-build-pr-pipeline-trigger-template
spec:
  params:
    - name: project-name
      description: The repo name in GitHub, also used as the name for the Kaniko image
    - name: git-revision
      description: The revision to clone and build
  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        generateName: $(tt.params.project-name)-node-build-pr-pipeline-run-
        namespace: greenlight-pipelines
      spec:
        pipelineRef:
          name: node-build-pipeline
        serviceAccountName: pipeline-sa
        params:
          - name: project-name
            value: $(tt.params.project-name)
          - name: git-revision
            value: $(tt.params.git-revision)  
        workspaces:
          - name: git-source
            volumeClaimTemplate:
              spec:
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 1Gi
          - name: greenlight-projects
            configMap:
              name: greenlight-projects
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: push-pipeline-trigger-binding
  namespace: greenlight-pipelines
spec:
  params:
    - name: project-name
      value: $(body.repository.name)
    - name: git-revision
      value: $(body.after)
    - name: git-branch
      value: $(extensions.branch_name)
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: pull-request-pipeline-trigger-binding
  namespace: greenlight-pipelines
spec:
  params:
    - name: project-name
      value: $(body.repository.name)
    - name: git-revision
      value: $(body.pull_request.head.sha)
    - name: git-branch
      value: $(body.pull_request.head.ref)
    - name: git-base-branch
      value: $(body.pull_request.base.ref)
    - name: git-pr-action
      value: $(body.action)
    - name: git-pr-number
      value: $(body.number)
    - name: git-pr-commit-number
      value: $(body.pull_request.commits)
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: node-pipeline-event-listener
  namespace: greenlight-pipelines
spec:
  serviceAccountName: tekton-triggers-admin
  triggers:
    - name: node-build-pr-pipeline-trigger
      template:
        ref: node-build-pr-pipeline-trigger-template
      bindings:
        - kind: TriggerBinding
          ref: pull-request-pipeline-trigger-binding
      interceptors:
        - github:
            secretRef:
              secretName: webhook-secret
              secretKey: webhookSecretValue
            eventTypes:
              - pull_request
        - cel:
            filter: "body.action in ['opened', 'synchronize', 'reopened']"
    - name: node-remove-pr-pipeline-trigger
      template:
        spec:
          resourcetemplates:
            - apiVersion: tekton.dev/v1beta1
              kind: TaskRun
              metadata:
                generateName: node-remove-pr-temp-task-run-
              spec:
                taskSpec:
                  steps:
                    - image: ubuntu
                      script: echo 'TBD - handle removal of PR build resources'
      interceptors:
        - github:
            secretRef:
              secretName: webhook-secret
              secretKey: webhookSecretValue
            eventTypes:
              - pull_request
        - cel:
            filter: "body.action in ['closed']"
    - name: node-build-main-pipeline-trigger
      template:
        spec:
          resourcetemplates:
            - apiVersion: tekton.dev/v1beta1
              kind: TaskRun
              metadata:
                generateName: node-build-main-temp-task-run-
              spec:
                taskSpec:
                  steps:
                    - image: ubuntu
                      script: echo 'TBD - handle push to main'
      interceptors:
        - github:
            secretRef:
              secretName: webhook-secret
              secretKey: webhookSecretValue
            eventTypes:
              - push
        - cel:
            filter: "body.ref == 'refs/heads/main' || body.ref == 'refs/heads/master'"
            overlays:
            - key: extensions.branch_name
              expression: "body.ref.split('/')[2]"
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: {{ .Values.global.tlsCertIssuer }}
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
  name: node-pipeline-trigger-ingress
  namespace: greenlight-pipelines
spec:
  rules:
    - host: tekton.{{ .Values.global.appsDomainName }}
      http:
        paths:
          - backend:
              serviceName: el-node-pipeline-event-listener
              servicePort: 8080
            path: /webhook/node-pipeline
  tls:
    - hosts:
        - tekton.{{ .Values.global.appsDomainName }}
      secretName: {{ .Values.global.tlsCertIssuer }}
