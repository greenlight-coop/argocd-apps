apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: run-serenity-tests
  namespace: greenlight-pipelines
spec:
  description: >-
    This Task runs Serenity/JS integration tests. Test results are written into the source workspace at the subdirectory
    './site' and exposed at the URL https://${results-identifier}.apps.greenlightcoop.dev
  params:
    - name: test-image
      description: >-
        Image containing features to run, must be packaged at /usr/src/app with Node script 'test-features'. If not
        provided, the source workspace is expected to contain a Node module with the script 'test-features'.

        Note: if the default value is updated, the reference in the run-integration-tests step must be updated as well.
      default: greenlightcoop/serenity-js-runner:0.1.2
    - name: base-url
      description: The base URL to pass to the tests as environment variable BASE_URL
      type: string
    - name: results-identifier
      description: >-
        Unique identifier for the test results; used to generate the results report URL and for later deletion of the resources
        that provide the report.
    - name: kubectl-image
      default: gcr.io/cloud-builders/kubectl@sha256:8ab94be8b2b4f3d117f02d868b39540fddd225447abf4014f7ba4765cb39f753 #image is huge
      description: Kubectl wrapper image
  workspaces:
    - name: source
  results:
    - name: report-url
      description: URL used to access the generated Serenity results report
  steps:
    - name: expose-report-site
      workingDir: $(workspaces.source.path)
      image: $(params.kubectl-image)
      script: |
        mkdir site
        cat > site/index.html <<EOL
        <html>
          <head><title>Test results pending</title></head>
          <body><p>Test results pending</p></body>
        </html>
        EOL

        AFFINITY_ASSISTANT_INSTANCE=$(kubectl get pod \
          --namespace greenlight-pipelines \
          --selector=tekton.dev/taskRun=$(context.taskRun.name) \
          -o jsonpath="{.items[0]...requiredDuringSchedulingIgnoredDuringExecution[0]..matchLabels['app\.kubernetes\.io/instance']}"

        cat <<EOF | kubectl apply -f -
        apiVersion: argoproj.io/v1alpha1
        kind: Application
        metadata:
          name: test-results-$(params.results-identifier)
          namespace: argocd
          finalizers:
            - resources-finalizer.argocd.argoproj.io
        spec:
          destination:
            namespace: greenlight-pipelines
            server: https://kubernetes.default.svc
          project: greenlight-project
          source:
            path: expose-pipeline-workspace-content
            repoURL: git@github.com:greenlight-coop/greenlight-helm-charts.git
            targetRevision: HEAD
            helm:
              values: |
                identifier: $(params.results-identifier)
                namespace: $(context.taskRun.namespace)
                affinityAssistantInstance: $AFFINITY_ASSISTANT_INSTANCE
                persistentVolumeClaimName: $(workspaces.source.claim)
                volumeSubPath: site
                appsDomainName: {{ .Values.appsDomainName }}
                useStagingCertificates: {{ .Values.useStagingCertificates }}
          syncPolicy:
            automated:
              prune: true
              selfHeal: true
            retry:
              limit: 5
              backoff:
                duration: 5s
                factor: 2
                maxDuration: 3m
        EOF
        echo 'https://$(params.results-identifier).{{ .Values.appsDomainName }}' > $(results.report-url.path)

    - name: run-integration-tests
      workingDir: $(workspaces.source.path)
      image: $(params.test-image)
      env:
        - name: BASE_URL
          value: $(params.base-url)
        - name: BDD_REPORT_DIR
          value: $(workspaces.source.path)/site
      script: |
        if [ "$(params.test-image)" != "greenlightcoop/serenity-js-runner:0.1.2" ]
        then
          cd /usr/src/app
        else
          npm install
        fi
        npm run test-features
